[coverage:run]
branch = True
omit = *test_*

[coverage:report]
exclude_lines =
    pragma: no cover
show_missing = True
skip_covered = False

[flake8]
# generic
classmethod-decorators =
    classmethod
    validator
max-line-length = 119
# flake8-docstrings config
docstring-convention = google
# rules
select =
    # pycodestyle
    E112,E113,E71,E72,E74,E9,W6,
    # pyflakes
    F,
    # flake8-bugbear
    B,
    # flake8-comprehensions
    C4,
    # flake8-docstrings
    D1,
    # flake8-requirements
    I,
    # pep8-naming
    N807,
    # flake8-eradicate
    E800,
    # flake8-simplify
    SIM,
    # flake8-return
    R5
    # flake8-fixme
    T100,T101,T102
    # flake8-print
    T2,
    # flake8-type-checking
    TC00
ignore =
    # pycodestyle (overlaps with B904)
    E722,
    # pyflakes (allow star imports)
    F403,F405,
    # flake8-bugbear (allow pydantic @validator)
    B902,
    # flake8-comprehensions (allow dict() calls)
    C408,
    # pydocstyle
    # (allow public module without docstring)
    D100,
    # (allow public package without docstring)
    D104,
    # (allow __init__ without docstring)
    D107,
    # (allow first line of docstring to wrap)
    D415,
    # pep8-naming (overlaps with B902)
    D404,D405,
# exclude
exclude =
    __pycache__,
    .git,
    .mypy_cache,
    .venv,
    .vscode,
[isort]
profile=black

[tool:pytest]
addopts = --cov --cov-report html --cov-fail-under 90 --cov-report term-missing -rAx
